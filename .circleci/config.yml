# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    machine:
      services:
        - docker
      environment:
        RAILS_ENV: test
    steps:
      # output information about the docker environment
      - checkout
      - run:
          command: docker info
      - run:
          command: cp ./api/.env.example ./api/.env

      - run:
          command: ls -la
      # build our Docker images
      - restore_cache:
          key: dependency-cache-{{ checksum "docker-compose.yml" }}-{{ checksum "./client/package.json" }}-{{ checksum "./api/Gemfile.lock" }}
      - run:
          name: "Build app and api image"
          command: docker-compose build app api
      - run:
          name: "Up test_app and test_api container"
          command: docker-compose up -d test_app test_api
      - save_cache:
          key: dependency-cache-{{ checksum "docker-compose.yml" }}-{{ checksum "./client/package.json" }}-{{ checksum "./api/Gemfile.lock" }}
          paths:
            - ./docker-build
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "api/spec/**/*_feature.rb"| circleci tests split --split-by=timings)"
            docker-compose run test bundle exec rspec \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            -- $(sed -e 's/\n/\\n/' -e 's/ /\ /' <<< "${TEST_FILES}")

      # collect reports
      - store_test_results:
          path: ~/project/api/tmp/test-results
      - store_artifacts:
          path: ~/project/api/tmp/test-results
          destination: test-results
      - store_artifacts:
          path: ~/project/api/tmp/capybara